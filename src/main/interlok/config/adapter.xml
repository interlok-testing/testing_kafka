<adapter>
  <unique-id>kafka</unique-id>
  <start-up-event-imp>com.adaptris.core.event.StandardAdapterStartUpEvent</start-up-event-imp>
  <heartbeat-event-imp>com.adaptris.core.HeartbeatEvent</heartbeat-event-imp>
  <shared-components>
    <connections/>
    <services/>
  </shared-components>
  <event-handler class="default-event-handler">
    <unique-id>DefaultEventHandler</unique-id>
    <connection class="null-connection">
      <unique-id>dreamy-mayer</unique-id>
    </connection>
    <producer class="null-message-producer">
      <unique-id>nostalgic-montalcini</unique-id>
    </producer>
  </event-handler>
  <message-error-handler class="null-processing-exception-handler">
    <unique-id>cranky-goldstine</unique-id>
  </message-error-handler>
  <failed-message-retrier class="no-retries">
    <unique-id>romantic-poincare</unique-id>
  </failed-message-retrier>
  <channel-list>
    <channel>
      <consume-connection class="null-connection">
        <unique-id>reverent-spence</unique-id>
      </consume-connection>
      <produce-connection class="apache-kafka-connection">
        <unique-id>kafka-produce-connection</unique-id>
        <config-builder class="kafka-simple-config-builder">
          <bootstrap-servers>${kafkaServer}</bootstrap-servers>
          <group-id>${kafkaGroup}</group-id>
          <compression-type>gzip</compression-type>
          <acks>all</acks>
          <retries>3</retries>
        </config-builder>
      </produce-connection>
      <workflow-list>
        <standard-workflow>
          <consumer class="polling-trigger">
            <unique-id>furious-pare</unique-id>
            <poller class="fixed-interval-poller">
              <poll-interval>
                <unit>SECONDS</unit>
                <interval>10</interval>
              </poll-interval>
            </poller>
          </consumer>
          <service-collection class="service-list">
            <unique-id>zen-shannon</unique-id>
            <services/>
          </service-collection>
          <producer class="standard-apache-kafka-producer">
            <unique-id>kafka-producer</unique-id>
            <record-key>interlok</record-key>
            <topic>${kafkaTopic}</topic>
          </producer>
          <unique-id>to-kafka</unique-id>
        </standard-workflow>
      </workflow-list>
      <unique-id>to-kafka</unique-id>
    </channel>
    <channel>
      <consume-connection class="apache-kafka-connection">
        <unique-id>kafka-consume-connection</unique-id>
        <config-builder class="kafka-basic-consumer-config">
          <bootstrap-servers>${kafkaServer}</bootstrap-servers>
          <group-id>${kafkaGroup}</group-id>
        </config-builder>
      </consume-connection>
      <produce-connection class="null-connection">
        <unique-id>sharp-wozniak</unique-id>
      </produce-connection>
      <workflow-list>
        <standard-workflow>
          <consumer class="standard-apache-kafka-consumer">
            <unique-id>kafka-consumer</unique-id>
            <topics>${kafkaTopic}</topics>
          </consumer>
          <service-collection class="service-list">
            <unique-id>reverent-rosalind</unique-id>
            <services/>
          </service-collection>
          <producer class="fs-producer">
            <unique-id>berserk-swanson</unique-id>
            <create-dirs>true</create-dirs>
            <fs-worker class="fs-nio-worker"/>
            <filename-creator class="formatted-filename-creator">
              <filename-format>%1$s</filename-format>
            </filename-creator>
            <base-directory-url>${fsDir}</base-directory-url>
          </producer>
          <unique-id>kafka-to-fs</unique-id>
        </standard-workflow>
      </workflow-list>
      <unique-id>kafka-to-fs</unique-id>
    </channel>
  </channel-list>
  <message-error-digester class="standard-message-error-digester">
    <unique-id>ErrorDigest</unique-id>
    <digest-max-size>100</digest-max-size>
  </message-error-digester>
</adapter>